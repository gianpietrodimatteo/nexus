# Project Purpose

One **Next.js 14** codeâ€‘base that hosts both _Admin_ and _Client_ dashboards for the Nexus platform.  
Tech stack: **React 19, TypeScript (strict), Tailwind + shadcnâ€‘ui, tRPC, Prisma, PostgreSQL, nextâ€‘auth**.

---

## Test Project Constraints

| Area | Constraint |
|------|------------|
| **Authentication** | Basic email/password with next-auth. No OAuth, SSO, or 2FA required. |
| **Database** | Single shared PostgreSQL database for both Admin and Client apps. |
| **Platform** | Desktop web only - no mobile responsive design needed. |
| **Notifications** | Email only - no SMS provider integration required. |
| **Data retention** | Keep all logs/exceptions/execution history indefinitely. |
| **Accessibility** | Not required - focus on functionality and design quality. |
| **Missing designs** | Create reasonable loading, error, empty states where Figma is incomplete. |

**Development Priorities**: 1) Functionality 2) Code quality 3) Design accuracy

---

## Repository Hygiene

| Area | Rule |
|------|------|
| **Root layout** | Keep `apps/`, `prisma/`, `src/`, `.github/`, `scripts/`. No code in repo root. |
| **Route groups** | `/admin/**` and `/client/**` live under `src/app/(dashboard)/*`. Anything else goes in shared folders. |
| **Import aliases** | Use `@/` as defined in `tsconfig.json`; _never_ long relative paths like `../../../`. |
| **Feature flags / TODOs** | Tag with `// TODO(@name)[MMâ€‘DD]: â€¦`. Include owner + date. Cursor will surface these. |

---

## Code Style

* **Formatter**: `prettier` _(autoâ€‘run via Cursor on save)_  
* **Linter**: `eslint --max-warnings 0`  
* **TypeScript**: `strict: true`, `noImplicitAny`, `exactOptionalPropertyTypes`.  
* **Naming**: `PascalCase` for React components, `camelCase` for functions/vars, `UPPER_SNAKE_CASE` for envs.  
* **React hooks**: Custom hooks start with `use*`. Abide by the Rules of Hooks.  
* **tRPC routers**: group by domain (`/server/routers/admin.ts`, etc.).  
* **Prisma**: mutations wrapped in `try/catch`; never use `@ts-ignore`.

---

## Secrets & Environment

* **Local dev** â†’ `.env.development` *(NOT committed)*  
* **Test/CI**   â†’ `.env.test`  
* **Prod**      â†’ Vercel project settings  
* Never commit credentials, JWT secrets, or connection strings.

---

## Database

* **Migrations** via `prisma migrate dev` (local) & `prisma migrate deploy` (CI/prod).  
* No raw SQL unless Prisma cannot express the query; wrap raw calls in repository helper.
* **Access control** via organization-scoped queries and role-based middleware.

---

## Deployment

* **Local**: `pnpm db:up && pnpm dev` (starts Docker Postgres + Next dev).  
* **CI**   : GitHub Actions `build-lint-test`.  
* **Prod**: Vercel build runs `postinstall â†’ prisma migrate deploy` against Neon.

---

## ðŸ“š Documentation

* Highâ€‘level docs go in `/docs/*.md`.  
* This `.cursorrules` file is the canonical styleguide; keep it updated as the architecture evolves.

<!-- End of .cursorrules -->
